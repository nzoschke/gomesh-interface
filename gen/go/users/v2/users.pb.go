// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users/v2/users.proto

package v2pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/lyft/protoc-gen-validate/validate"
import v2 "github.com/nzoschke/gomesh-interface/gen/go/widgets/v2"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import field_mask "google.golang.org/genproto/protobuf/field_mask"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Parent               string               `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName          string               `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Widgets              []*v2.Widget         `protobuf:"bytes,5,rep,name=widgets,proto3" json:"widgets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_f6dfed791907e29b, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *User) GetWidgets() []*v2.Widget {
	if m != nil {
		return m.Widgets
	}
	return nil
}

type GetRequest struct {
	// Name
	//
	// Format "orgs/{org_id}/users/{user_id}"
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_f6dfed791907e29b, []int{1}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateRequest struct {
	// Parent
	//
	// Format "orgs/{org_id}"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// User ID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// User
	//
	// Required
	User                 *User    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_f6dfed791907e29b, []int{2}
}
func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(dst, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateRequest struct {
	// User
	//
	// Required
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Update Mask
	//
	// Required
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_f6dfed791907e29b, []int{3}
}
func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(dst, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_f6dfed791907e29b, []int{4}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(dst, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListRequest struct {
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_f6dfed791907e29b, []int{5}
}
func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (dst *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(dst, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_f6dfed791907e29b, []int{6}
}
func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (dst *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(dst, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type BatchGetRequest struct {
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Names                []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetRequest) Reset()         { *m = BatchGetRequest{} }
func (m *BatchGetRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetRequest) ProtoMessage()    {}
func (*BatchGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_f6dfed791907e29b, []int{7}
}
func (m *BatchGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetRequest.Unmarshal(m, b)
}
func (m *BatchGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetRequest.Marshal(b, m, deterministic)
}
func (dst *BatchGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetRequest.Merge(dst, src)
}
func (m *BatchGetRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetRequest.Size(m)
}
func (m *BatchGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetRequest proto.InternalMessageInfo

func (m *BatchGetRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *BatchGetRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type BatchGetResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetResponse) Reset()         { *m = BatchGetResponse{} }
func (m *BatchGetResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetResponse) ProtoMessage()    {}
func (*BatchGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_f6dfed791907e29b, []int{8}
}
func (m *BatchGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetResponse.Unmarshal(m, b)
}
func (m *BatchGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetResponse.Marshal(b, m, deterministic)
}
func (dst *BatchGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetResponse.Merge(dst, src)
}
func (m *BatchGetResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetResponse.Size(m)
}
func (m *BatchGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetResponse proto.InternalMessageInfo

func (m *BatchGetResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "gomesh.users.v2.User")
	proto.RegisterType((*GetRequest)(nil), "gomesh.users.v2.GetRequest")
	proto.RegisterType((*CreateRequest)(nil), "gomesh.users.v2.CreateRequest")
	proto.RegisterType((*UpdateRequest)(nil), "gomesh.users.v2.UpdateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "gomesh.users.v2.DeleteRequest")
	proto.RegisterType((*ListRequest)(nil), "gomesh.users.v2.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "gomesh.users.v2.ListResponse")
	proto.RegisterType((*BatchGetRequest)(nil), "gomesh.users.v2.BatchGetRequest")
	proto.RegisterType((*BatchGetResponse)(nil), "gomesh.users.v2.BatchGetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UsersClient is the client API for Users service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersClient interface {
	// Get User
	//
	// Takes User name (with parent Org) in path
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*User, error)
	// Create User
	//
	// Takes parent Org in path and User in body
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*User, error)
	// Update User
	//
	// Takes User name (with parent Org) in path, and User in body
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*User, error)
	// Delete User
	//
	// Takes User name (with parent Org) in path
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// List Users
	//
	// Takes parent Org in path
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	// BatchGet Users
	//
	// Takes parent Org in path and User names in query string
	BatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/gomesh.users.v2.Users/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/gomesh.users.v2.Users/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/gomesh.users.v2.Users/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gomesh.users.v2.Users/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/gomesh.users.v2.Users/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) BatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error) {
	out := new(BatchGetResponse)
	err := c.cc.Invoke(ctx, "/gomesh.users.v2.Users/BatchGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServer is the server API for Users service.
type UsersServer interface {
	// Get User
	//
	// Takes User name (with parent Org) in path
	Get(context.Context, *GetRequest) (*User, error)
	// Create User
	//
	// Takes parent Org in path and User in body
	Create(context.Context, *CreateRequest) (*User, error)
	// Update User
	//
	// Takes User name (with parent Org) in path, and User in body
	Update(context.Context, *UpdateRequest) (*User, error)
	// Delete User
	//
	// Takes User name (with parent Org) in path
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	// List Users
	//
	// Takes parent Org in path
	List(context.Context, *ListRequest) (*ListResponse, error)
	// BatchGet Users
	//
	// Takes parent Org in path and User names in query string
	BatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error)
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gomesh.users.v2.Users/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gomesh.users.v2.Users/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gomesh.users.v2.Users/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gomesh.users.v2.Users/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gomesh.users.v2.Users/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_BatchGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).BatchGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gomesh.users.v2.Users/BatchGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).BatchGet(ctx, req.(*BatchGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gomesh.users.v2.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Users_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Users_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Users_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Users_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Users_List_Handler,
		},
		{
			MethodName: "BatchGet",
			Handler:    _Users_BatchGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users/v2/users.proto",
}

func init() { proto.RegisterFile("users/v2/users.proto", fileDescriptor_users_f6dfed791907e29b) }

var fileDescriptor_users_f6dfed791907e29b = []byte{
	// 801 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcb, 0x4e, 0x1b, 0x49,
	0x14, 0x55, 0xfb, 0x05, 0x5c, 0xe3, 0x01, 0x15, 0x8f, 0x69, 0xda, 0x3c, 0x4c, 0x63, 0x21, 0x63,
	0xe4, 0xf6, 0xa8, 0xd1, 0x68, 0x34, 0x33, 0x1a, 0x21, 0x79, 0x66, 0x40, 0x91, 0x92, 0x08, 0x75,
	0x40, 0x91, 0xf2, 0xc0, 0x2a, 0xdb, 0x85, 0xe9, 0x60, 0x77, 0x77, 0xba, 0xca, 0x4e, 0x00, 0x21,
	0x45, 0x2c, 0xb3, 0xc9, 0x22, 0xbf, 0x92, 0x55, 0x56, 0xd9, 0xe5, 0x03, 0xf2, 0x0b, 0xd9, 0xe4,
	0x2f, 0xa2, 0x7a, 0x34, 0xf8, 0x89, 0x94, 0xec, 0xaa, 0xef, 0xbd, 0x75, 0xce, 0xbd, 0xe7, 0x9e,
	0x6a, 0x98, 0xef, 0x50, 0x12, 0xd2, 0x72, 0xd7, 0x2e, 0x8b, 0x83, 0x15, 0x84, 0x3e, 0xf3, 0xd1,
	0x4c, 0xd3, 0x6f, 0x13, 0x7a, 0x6a, 0xc9, 0x58, 0xd7, 0x36, 0x96, 0x9b, 0xbe, 0xdf, 0x6c, 0x91,
	0x32, 0x0e, 0xdc, 0x32, 0xf6, 0x3c, 0x9f, 0x61, 0xe6, 0xfa, 0x9e, 0x2a, 0x37, 0xb2, 0x2a, 0x2b,
	0xbe, 0x6a, 0x9d, 0x93, 0x32, 0x69, 0x07, 0xec, 0x5c, 0x25, 0x73, 0x83, 0xc9, 0x13, 0x97, 0xb4,
	0x1a, 0xd5, 0x36, 0xa6, 0x67, 0xaa, 0x62, 0x6d, 0xb0, 0x82, 0xb9, 0x6d, 0x42, 0x19, 0x6e, 0x07,
	0xaa, 0xe0, 0xd7, 0x2e, 0x6e, 0xb9, 0x0d, 0xcc, 0x48, 0x39, 0x3a, 0xa8, 0x84, 0xfe, 0xca, 0x6d,
	0x34, 0x09, 0x13, 0xfd, 0xab, 0xa3, 0xcc, 0x98, 0x9f, 0x35, 0x48, 0x1c, 0x51, 0x12, 0xa2, 0x45,
	0x48, 0x05, 0x38, 0x24, 0x1e, 0xd3, 0xb5, 0x9c, 0x56, 0x98, 0x72, 0xd4, 0x17, 0x42, 0x90, 0xf0,
	0x70, 0x9b, 0xe8, 0x31, 0x11, 0x15, 0x67, 0xb4, 0x0e, 0xd3, 0x0d, 0x97, 0x06, 0x2d, 0x7c, 0x5e,
	0x15, 0xb9, 0xb8, 0xc8, 0xa5, 0x55, 0xec, 0x21, 0x2f, 0xf9, 0x1b, 0xd2, 0xf5, 0x90, 0x60, 0x46,
	0xaa, 0xbc, 0x49, 0x3d, 0x91, 0xd3, 0x0a, 0x69, 0xdb, 0xb0, 0xe4, 0x04, 0x56, 0x34, 0x81, 0x75,
	0x18, 0x4d, 0xe0, 0x80, 0x2c, 0xe7, 0x01, 0xb4, 0x03, 0x13, 0xaa, 0x4b, 0x3d, 0x99, 0x8b, 0x17,
	0xd2, 0xf6, 0x92, 0xa5, 0x84, 0x8e, 0x9a, 0xef, 0xda, 0xd6, 0x63, 0x71, 0x74, 0xa2, 0x4a, 0xf3,
	0x10, 0x60, 0x9f, 0x30, 0x87, 0xbc, 0xec, 0x10, 0xca, 0xd0, 0x9e, 0x6a, 0x5b, 0x0c, 0x53, 0xb1,
	0x3f, 0x7e, 0xfb, 0x14, 0x2f, 0x85, 0xdb, 0x85, 0x37, 0x09, 0x7b, 0xf3, 0xd8, 0x0f, 0x9b, 0xb4,
	0xfc, 0x14, 0x97, 0x2e, 0x7e, 0x2b, 0xfd, 0x69, 0x55, 0x4b, 0xcf, 0xb7, 0xe5, 0x4e, 0xfb, 0x42,
	0x79, 0x39, 0xaa, 0xf9, 0x41, 0x83, 0xcc, 0xbf, 0xa2, 0xb3, 0x08, 0xf9, 0x8f, 0x7e, 0xa1, 0x2a,
	0x6b, 0x1c, 0xdb, 0x08, 0x75, 0x8e, 0x3d, 0x37, 0x8c, 0x9d, 0xbf, 0x51, 0x72, 0x07, 0x26, 0x38,
	0x4f, 0xd5, 0x6d, 0x48, 0x31, 0x2b, 0x06, 0xbf, 0xb9, 0x10, 0xce, 0xf1, 0x9b, 0xbf, 0x1c, 0x0f,
	0x5c, 0xe2, 0xa5, 0xf7, 0x1a, 0xe8, 0x77, 0x48, 0xf0, 0x93, 0x90, 0x38, 0x6d, 0x2f, 0x58, 0x03,
	0x86, 0xb3, 0xf8, 0xee, 0x2a, 0xc0, 0x81, 0x92, 0x6f, 0xb5, 0xd8, 0xac, 0xe6, 0x88, 0x72, 0xf3,
	0x9d, 0x06, 0x99, 0xa3, 0xa0, 0xd1, 0xd3, 0x76, 0x04, 0xa4, 0xfd, 0x10, 0x10, 0xda, 0x87, 0x74,
	0x47, 0xe0, 0x08, 0x23, 0x8a, 0xc6, 0x47, 0xed, 0x71, 0x8f, 0x7b, 0xf5, 0x01, 0xa6, 0x67, 0x7d,
	0x10, 0x20, 0xaf, 0xf2, 0xb8, 0xb9, 0x01, 0x99, 0xff, 0x48, 0x8b, 0xdc, 0x36, 0x84, 0x7a, 0x37,
	0xa4, 0xd4, 0xc6, 0x90, 0xbe, 0xef, 0xd2, 0x9b, 0x25, 0x8e, 0xf3, 0x64, 0x16, 0xa6, 0x02, 0xdc,
	0x24, 0x55, 0xea, 0x5e, 0x48, 0x63, 0x26, 0x9d, 0x49, 0x1e, 0x78, 0xe4, 0x5e, 0x10, 0xb4, 0x02,
	0x20, 0x92, 0xcc, 0x3f, 0x23, 0x9e, 0xb2, 0xa6, 0x28, 0x3f, 0xe4, 0x01, 0xb3, 0x0e, 0xd3, 0x92,
	0x82, 0x06, 0xbe, 0x47, 0x09, 0xda, 0x86, 0xa4, 0xd0, 0x40, 0xd7, 0x84, 0xd3, 0x46, 0x0b, 0xe3,
	0xc8, 0x1a, 0xb4, 0x09, 0x33, 0x1e, 0x79, 0xcd, 0xaa, 0x3d, 0x04, 0xf2, 0x5d, 0x64, 0x78, 0xf8,
	0xe0, 0x86, 0x64, 0x17, 0x66, 0x2a, 0x98, 0xd5, 0x4f, 0x7b, 0x0c, 0x39, 0x6e, 0x96, 0x79, 0x48,
	0xf2, 0xd1, 0xa9, 0x1e, 0xcb, 0xc5, 0x0b, 0x53, 0x8e, 0xfc, 0x30, 0x77, 0x61, 0xf6, 0x16, 0xe0,
	0x27, 0x3a, 0xb5, 0xaf, 0x93, 0x90, 0x3c, 0x12, 0x3d, 0x3f, 0x83, 0xf8, 0x3e, 0x61, 0x28, 0x3b,
	0x54, 0x7e, 0xdb, 0x9c, 0x31, 0x1a, 0xcb, 0x5c, 0xbf, 0xfe, 0xf2, 0xf5, 0x7d, 0x2c, 0x8b, 0x96,
	0xf8, 0x7f, 0xe3, 0x92, 0x77, 0xf6, 0x8f, 0xf0, 0x77, 0x51, 0x3d, 0x98, 0xe2, 0x15, 0x22, 0x90,
	0x92, 0xcf, 0x03, 0xad, 0x0e, 0x61, 0xf4, 0xbd, 0x9b, 0x71, 0x1c, 0x79, 0xc1, 0xb1, 0x6a, 0x4a,
	0x0e, 0x29, 0x8a, 0x62, 0xb9, 0x92, 0x34, 0x7f, 0x69, 0x45, 0xf4, 0x02, 0x52, 0xd2, 0xce, 0x23,
	0x68, 0xfa, 0x7c, 0x3e, 0x8e, 0x66, 0x4b, 0xd0, 0x6c, 0xd8, 0xab, 0x82, 0x86, 0xe7, 0xac, 0x51,
	0xf3, 0x70, 0xae, 0x3a, 0xa4, 0xa4, 0x53, 0x47, 0x70, 0xf5, 0x59, 0xd8, 0x58, 0x1c, 0x7a, 0x07,
	0xff, 0xf3, 0x1f, 0x7a, 0xa4, 0x5b, 0xf1, 0x0e, 0xdd, 0x4e, 0x20, 0xc1, 0x6d, 0x88, 0x96, 0x87,
	0x28, 0x7a, 0x1e, 0x80, 0xb1, 0x32, 0x26, 0x2b, 0x1d, 0x31, 0xb0, 0x9f, 0x51, 0xda, 0xa1, 0x4b,
	0x98, 0x8c, 0x8c, 0x84, 0x72, 0x43, 0x68, 0x03, 0x26, 0x35, 0xd6, 0xef, 0xa8, 0x50, 0x9c, 0x45,
	0xc1, 0x99, 0x47, 0xe6, 0xf8, 0x7d, 0xd5, 0xd4, 0x9d, 0xca, 0x16, 0xcc, 0xd5, 0xfd, 0xf6, 0x20,
	0x66, 0x05, 0x84, 0x31, 0x0f, 0xb8, 0x66, 0x07, 0xda, 0x93, 0x44, 0xd7, 0x0e, 0x6a, 0xb5, 0x94,
	0x90, 0x70, 0xe7, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x02, 0xb7, 0x38, 0x8e, 0x68, 0x07, 0x00,
	0x00,
}
